[
  { # information to connect to compara/hive database
    TYPE => COMPARA,
    '-host'     => "ia64g",
    '-port'     => "3306",
    '-user'     => "ensadmin",
    '-pass'     => $ENV{'ENSADMIN_PSW'},
    '-dbname'   => "abel_compara_blastz_Hs35Rn3p4c",
    '-adaptor'  => "Bio::EnsEMBL::Compara::DBSQL::DBAdaptor",
  },
  { TYPE => HIVE,
    'hive_output_dir'      => "/acari/work7a/abel/hive/abel_compara_blastz_Hs35Rn3p4c/workers",
# IMPORTANT: The hive system can generate an awful lot of log outputs that are dumped in
# the hive_output_dir. When a pipeline runs fine, these are not needed and can take a lot of
# disk space as well as generate a large number of files. If you don't want log outputs (recommended),
# then just don't specify any hive_output_dir (delete or comment the line or set to "" if you don't want
# any STDOUT/STDERR files)
  },

  { TYPE => SPECIES,
    'abrev'          => 'Hs35a',
    'genome_db_id'   => 1,
    'taxon_id'       => 9606,
    'phylum'         => 'Vertebrata',
    'module'         => 'Bio::EnsEMBL::DBSQL::DBAdaptor',
    'host'           => "ecs2",
    'port'           => 3365,
    'user'           => "ensro",
    'dbname'         => "homo_sapiens_core_28_35a",
    'species'        => "Homo sapiens"
  },

  { TYPE => SPECIES,
    'abrev'          => 'Rn3p4',
    'genome_db_id'   => 3,
    'taxon_id'       => 10116,
    'phylum'         => 'Vertebrata',
    'module'         => 'Bio::EnsEMBL::DBSQL::DBAdaptor',
    'host'           => "ecs2",
    'port'           => 3365,
    'user'           => "ensro",
    'dbname'         => "lec_rattus_norvegcius_27_3_4",
    'species'        => "Rattus norvegicus"
  },

  { TYPE => DNA_COLLECTION,
    'collection_name'       => 'rat for chain', # Don't forget that you have probably run a blastz
                                                # pipeline with a collection_name 'rat'. 
                                                # The collection_name needs to be unique to avoid confusion
    'genome_db_id'          => 3,
    'genome_name_assembly'  => 'Rattus norvegicus:RGSC3.4',
#    'chunk_size'            => 270000000,# set it to be over the longest toplevel seq_region
                                         # you expect for this species. If it is not defined, then the longest toplevel seg_region is automatically used.
    'dump_loc'              => '/acari/work7a/abel/hive/abel_compara_blastz_Hs35Rn3p4c/rat_nib_for_chain'
  },

  { TYPE => DNA_COLLECTION,
    'collection_name'       => 'human for chain',# Don't forget that you have probably run a blastz
                                                 # pipeline with a collection_name 'human'.
                                                 # The collection_name needs to be unique to avoid confusion
    'genome_db_id'          => 1,
    'genome_name_assembly'  => 'Homo sapiens:NCBI35',
#    'chunk_size'            => 250000000,# set it to be over the longest toplevel seq_region
                                         # you expect for this species. If is not defined, then the longest toplevel seg_region is automatically used.
    'include_non_reference' => 1, #optional, default: 0. In this case include non-reference regions eg haplotypes
    'dump_loc'              => '/acari/work7a/abel/hive/abel_compara_blastz_Hs35Rn3p4c/human_nib_for_chain',
  },


  { TYPE => CHAIN_CONFIG,
    'input_method_link' => [1001, 'BLASTZ_RAW'],
    'output_method_link' => [1002, 'BLASTZ_CHAIN'],

    'reference_collection_name' => 'human for chain',
    'non_reference_collection_name' => 'rat for chain',
              
    'max_gap' => 50,
    'output_group_type' => 'chain',
    'linear_gap' => 'medium' #can be medium, loose or filename. See axtChain for details
  },

  { TYPE => NET_CONFIG,
    'input_method_link' => [1002, 'BLASTZ_CHAIN'],
    'output_method_link' => [1, 'BLASTZ_NET'],

    'reference_collection_name' => 'human for chain',
    'non_reference_collection_name' => 'rat for chain',
              
    'max_gap' => 50,
    'input_group_type' => 'chain',
    'output_group_type' => 'default'
  },

##If this is defined, the pipeline will set the BLASTZ_NET genomic_align_block_id
##and genomic_align_ids to be unique across a release by adding $mlss_id*10**10
#  { TYPE => SET_INTERNAL_IDS,
#  },


## HEALTHCHECKS are run at the end of the pipeline.
## If not defined, the healthcheck params are automatically created.
# { TYPE => HEALTHCHECKS,
#    'pairwise_gabs' => "params=>{method_link_type=>\'BLASTZ_NET\',genome_db_ids=>\'[25,22,]\'}", 
    'compare_to_previous_db' => "params=>{previous_db_url=>\'mysql://anonymous\@ensembldb.ensembl.org\',method_link_type=>\'BLASTZ_NET\',current_genome_db_ids=>\'[25,22,]\',max_percentage_diff=>10}",             
#    'previous_db_url' => 'mysql://anonymous@ensembldb.ensembl.org', #default mysql://ensro@ens-livemirror
#     'hc_output_dir' => '/lustre/work1/ensembl/kb3/hive/release_55/kb3_hsap_ggor_blastz_55', #write healthcheck to a file in this directory
#  },            

##Automatically update the pairwise config database and create parameter web page
##Must have Template.pm in your PERL5LIB
# { TYPE => PAIR_ALIGNER_CONFIG,
#      'ref_species' => 'homo_sapiens',
#      'bed_dir' => '/nfs/ensembl/compara/dumps/bed/',
#      'config_url' => 'mysql://host:pass@compara1:3306/pair_aligner_config',
#      'config_file' => '/path/to/config_file/tblat.conf',
#      'perl_path' => '/path/to/perl/ensembl-compara/',      
#  },

  { TYPE => END }
]
